FROM php:8.3.13-fpm-alpine3.20

# RUN apk update && apk add --no-cache $PHPIZE_DEPS \
#     && pecl install xdebug-3.2.1 \
#     && docker-php-ext-enable xdebug
#oniguruma-dev # for mbstring



RUN apk update && apk add --no-cache $PHPIZE_DEPS \
    imagemagick-dev \
    php-pecl-imagick \
    php83-pecl-imagick \
    php83-pecl-imagick-dev

RUN pecl install imagick

RUN apk add libwebp libjpeg libpng


RUN apk update && apk add --no-cache \
    php83-pecl-redis

RUN pecl install redis

RUN apk update && apk add --no-cache \
    php-pdo php-pdo_mysql \
    oniguruma-dev \
    php-bcmath php-mbstring php-zip php-curl  curl-dev libxml2-dev libzip-dev  


# php83-pecl-amqp-2.1.2-r0
# php83-pecl-apcu-5.1.23-r0
# php83-pecl-ast-1.1.1-r0
# php83-pecl-brotli-0.15.0-r0
# php83-pecl-couchbase-4.2.1-r0
# php83-pecl-decimal-1.5.0-r1
# php83-pecl-ds-1.5.0-r0
# php83-pecl-event-3.1.3-r0
# php83-pecl-grpc-1.64.1-r0
# php83-pecl-igbinary-3.2.15-r0
# php83-pecl-imagick-3.7.0-r0
# php83-pecl-imagick-dev-3.7.0-r0
# php83-pecl-luasandbox-4.1.2-r0
# php83-pecl-lzf-1.7.0-r0
# php83-pecl-mailparse-3.1.6-r1
# php83-pecl-maxminddb-1.11.1-r0
# php83-pecl-mcrypt-1.0.7-r0
# php83-pecl-memcache-8.2-r0
# php83-pecl-memcached-3.3.0-r0
# php83-pecl-mongodb-1.19.1-r0
# php83-pecl-msgpack-2.2.0-r2
# php83-pecl-opentelemetry-1.1.0-r0
# php83-pecl-pcov-1.0.11-r0
# php83-pecl-protobuf-4.26.0-r0
# php83-pecl-psr-1.2.0-r0
# php83-pecl-rdkafka-6.0.5-r0
# php83-pecl-redis-6.1.0-r0
# php83-pecl-smbclient-1.1.1-r0
# php83-pecl-ssh2-1.4.1-r0
# php83-pecl-swoole-5.1.5-r0
# php83-pecl-swoole-dev-5.1.5-r0
# php83-pecl-timezonedb-2024.1-r0
# php83-pecl-uploadprogress-2.0.2-r1
# php83-pecl-uploadprogress-doc-2.0.2-r1
# php83-pecl-uuid-1.2.1-r0
# php83-pecl-vips-1.0.13-r0
# php83-pecl-xdebug-3.3.2-r0
# php83-pecl-xhprof-2.3.9-r2
# php83-pecl-xhprof-assets-2.3.9-r2
# php83-pecl-xlswriter-1.5.7-r0
# php83-pecl-yaml-2.2.4-r0
# php83-pecl-zstd-0.13.3-r0


RUN docker-php-ext-install bcmath ctype curl fileinfo mbstring pdo pdo_mysql xml zip
RUN docker-php-ext-enable imagick redis

# Install Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

RUN echo "\
<policy domain=\"coder\" rights=\"read|write\" pattern=\"PDF\" /> \
<policy domain=\"coder\" rights=\"read|write\" pattern=\"LABEL\" /> \
<policy domain=\"coder\" rights=\"read|write\" pattern=\"EPHEMERAL\" /> \
<policy domain=\"coder\" rights=\"read|write\" pattern=\"URL\" /> \
<policy domain=\"coder\" rights=\"read|write\" pattern=\"HTTPS\" /> \
<policy domain=\"coder\" rights=\"read|write\" pattern=\"HTTP\" /> \
<policy domain=\"coder\" rights=\"read|write\" pattern=\"FTP\" /> \
<policy domain=\"coder\" rights=\"read|write\" pattern=\"MVG\" /> \
<policy domain=\"coder\" rights=\"read|write\" pattern=\"M2V\" /> \
<policy domain=\"coder\" rights=\"read|write\" pattern=\"MPEG\" /> \
<policy domain=\"coder\" rights=\"read|write\" pattern=\"MPG\" /> \
<policy domain=\"coder\" rights=\"read|write\" pattern=\"WEBP\" /> \
<policy domain=\"coder\" rights=\"read|write\" pattern=\"WMV\" /> \
<policy domain=\"coder\" rights=\"read|write\" pattern=\"AVI\" /> \
<policy domain=\"coder\" rights=\"read|write\" pattern=\"MKV\" /> \
<policy domain=\"coder\" rights=\"read|write\" pattern=\"MP4\" /> \
<policy domain=\"coder\" rights=\"read|write\" pattern=\"PSD\" /> \
<policy domain=\"coder\" rights=\"read|write\" pattern=\"TIFF\" /> \
<policy domain=\"coder\" rights=\"read|write\" pattern=\"PNG\" /> \
<policy domain=\"coder\" rights=\"read|write\" pattern=\"JPEG\" /> \
<policy domain=\"coder\" rights=\"read|write\" pattern=\"JPG\" /> \
<policy domain=\"coder\" rights=\"read|write\" pattern=\"GIF\" /> \
<policy domain=\"coder\" rights=\"read|write\" pattern=\"BMP\" /> \
<policy domain=\"coder\" rights=\"read|write\" pattern=\"ICO\" /> \
<policy domain=\"coder\" rights=\"read|write\" pattern=\"SVG\" /> \
<policy domain=\"coder\" rights=\"read|write\" pattern=\"PDF\" />" >> /etc/ImageMagick-7/policy.xml

RUN apk add --no-cache nginx supervisor

# USER www-data

COPY composer.json .
COPY composer.lock .
RUN composer install

COPY . .

COPY config/nginx.conf /etc/nginx/http.d/default.conf
COPY config/supervisord.conf /etc/supervisord.conf
COPY config/logging.conf /usr/local/etc/php-fpm.d/logging.conf
COPY config/php.ini-development /usr/local/etc/php/php.ini
# COPY config/php.ini-production /usr/local/etc/php/php.ini


CMD ["/usr/bin/supervisord", "-c", "/etc/supervisord.conf"]