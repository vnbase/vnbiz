# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  webapp:
    build:
      # context: .
      dockerfile: Dockerfile.dev
    ports:
      - 8080:80
    volumes:
      - ./src:/var/www/html/src
      - ./test:/var/www/html/test
      - ./example:/var/www/html/example
    depends_on:
      - mysql8
      - redis7

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker-compose up`.
#     depends_on:
#       db:
#         condition: service_healthy
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt

# Use root/example as user/password credentials

  mysql8:
    image: mysql:8.4.2
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: vnbiz_dev
    # (this is just an example, not intended to be a production configuration)
    ports:
      - 3306:3306
    volumes:
      - ./data.mysql:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin:5.2.1-apache
    restart: always
    depends_on:
      - mysql8
    environment:
      PMA_HOST: mysql8
    # (this is just an example, not intended to be a production configuration)
    ports:
      - 9090:80

  redis7:
    image: redis:7.4.1-alpine
    restart: always
    ports:
      - 6379:6379
  minio:
    image: bitnami/minio:latest
    environment:
      MINIO_ROOT_USER: minioroot
      MINIO_ROOT_PASSWORD: rootpass
      MINIO_DEFAULT_BUCKETS: vnbizbucket
      MINIO_DATA_DIR: /my-data
    volumes:
      - ./data.minio:/my-data:rw
    ports:
      - 9000:9000
      - 9001:9001